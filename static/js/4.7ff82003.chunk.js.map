{"version":3,"sources":["shared/assets/images/bg-card-1.png","shared/assets/images/bg-card-2.png","shared/assets/images/bg-card-3.png","shared/assets/images/bg-card-4.png","shared/assets/images/bg-card-5.png","shared/assets/images/bg-card-6.png","shared/assets/images/bg-card-7.png","shared/constants/month-name.constant.js","components/MovieList/MovieHeader.js","shared/helpers/format-date.js","components/MovieList/MovieDescription.js","components/MovieList/MovieLink.js","shared/styles/themes/box-shadow.js","components/MovieList/MovieItem.js","components/MovieList/MovieList.js","shared/hooks/useMovieList.js"],"names":["module","exports","MONTH_NAMES","MovieHeaderStyle","styled","div","MovieTitle","h3","MovieDate","span","COLOR_GRAY","MovieHeader","id","title","releaseDate","to","date","split","year","month","day","formatDate","MovieDescriptionStyle","p","COLOR_WHITE","MovieDescription","description","substring","MovieLinkStyle","COLOR_RED","COLOR_YELLOW","MovieLink","BOX_SHADOW_PRIMARY","COLOR_BLACK","BOX_SHADOW_PRIMARY_HOVER","COLOR_BLUE","ColumnWithBackground","Col","bgCardOne","bgCardTwo","bgCardThree","bgCardFour","bgCardFive","bgCardSix","bgCardSeven","MovieContent","COLOR_BACKGROUND","MovieItem","MovieList","props","useState","movieList","setMovieList","loading","setLoading","useEffect","mounted","a","getAllMovie","movieData","fetchData","useMovieList","Loader","map","movie","key"],"mappings":"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","file":"static/js/4.7ff82003.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-card-1.0c96fd00.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-2.b0a7b209.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-3.1914d853.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-4.c21c4d4b.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-5.67d061d6.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-6.b4fea25d.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-7.ae324be7.png\";","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","// Import all Dependencies\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Import all Helpers\nimport formatDate from '../../shared/helpers/format-date';\n\n// Import all Themes\nimport { COLOR_GRAY } from '../../shared/styles/themes/colors';\n\nconst MovieHeaderStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.7rem;\n`;\n\nconst MovieTitle = styled.h3`\n  font-family: 'Star Jedi', 'Open Sans', sans-serif;\n  font-size: 2.2rem;\n  letter-spacing: 2px;\n`;\n\nconst MovieDate = styled.span`\n  color: ${COLOR_GRAY};\n  font-size: 1.4rem;\n`;\n\nexport default function MovieHeader({ id, title, releaseDate }) {\n  return (\n    <MovieHeaderStyle>\n      <MovieTitle>\n        <Link to={`/movie/${id}`}>{title}</Link>\n      </MovieTitle>\n      <MovieDate>{formatDate(releaseDate)}</MovieDate>\n    </MovieHeaderStyle>\n  );\n}\n\nMovieHeader.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n};\n","import { MONTH_NAMES } from '../constants/month-name.constant';\n\nexport default function formatDate(date) {\n  const [year, month, day] = date.split('-');\n  return `${MONTH_NAMES[month - 1]} ${day}, ${year}`;\n}\n","// Import all Dependencies\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// Import all Themes\nimport { COLOR_WHITE } from '../../shared/styles/themes/colors';\n\nconst MovieDescriptionStyle = styled.p`\n  font-family: inherit;\n  color: ${COLOR_WHITE};\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 2.5rem;\n`;\n\nexport default function MovieDescription({ description }) {\n  return (\n    <MovieDescriptionStyle>\n      {description.substring(0, 260)}...\n    </MovieDescriptionStyle>\n  );\n}\n\nMovieDescription.propTypes = {\n  description: PropTypes.string.isRequired,\n};\n","// Import all Dependencies\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Import all Themes\nimport { COLOR_YELLOW, COLOR_RED } from '../../shared/styles/themes/colors';\n\nconst MovieLinkStyle = styled.p`\n  padding-top: 1.2rem;\n  font-size: 1.4rem;\n  text-transform: capitalize;\n  border-top: 2px solid ${COLOR_RED};\n  color: ${COLOR_YELLOW};\n`;\n\nexport default function MovieLink({ id }) {\n  return (\n    <MovieLinkStyle>\n      <Link to={`/movie/${id}`}>More info</Link>\n    </MovieLinkStyle>\n  );\n}\n\nMovieLink.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import { COLOR_BLACK, COLOR_BLUE } from './colors';\n\nexport const BOX_SHADOW_PRIMARY = `0px 0px 10px 3px transparent, 0px 0px 10px ${COLOR_BLACK}`;\nexport const BOX_SHADOW_PRIMARY_HOVER = `0px 0px 10px 3px ${COLOR_BLUE}, 0px 0px 10px ${COLOR_BLACK}`;\n","// Import all Dependencies\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// Import all Components\nimport MovieHeader from './MovieHeader';\nimport MovieDescription from './MovieDescription';\nimport MovieLink from './MovieLink';\n\n// Import all Styles\nimport { Col } from '../../shared/styles/base/grid';\n\n// Import all Assets\nimport bgCardOne from '../../shared/assets/images/bg-card-1.png';\nimport bgCardTwo from '../../shared/assets/images/bg-card-2.png';\nimport bgCardThree from '../../shared/assets/images/bg-card-3.png';\nimport bgCardFour from '../../shared/assets/images/bg-card-4.png';\nimport bgCardFive from '../../shared/assets/images/bg-card-5.png';\nimport bgCardSix from '../../shared/assets/images/bg-card-6.png';\nimport bgCardSeven from '../../shared/assets/images/bg-card-7.png';\n\n// Import all Themes\nimport {\n  COLOR_BACKGROUND,\n  COLOR_WHITE,\n} from '../../shared/styles/themes/colors';\nimport {\n  BOX_SHADOW_PRIMARY,\n  BOX_SHADOW_PRIMARY_HOVER,\n} from '../../shared/styles/themes/box-shadow';\n\nconst ColumnWithBackground = styled(Col)`\n  &:nth-child(1) > * {\n    background: url(${bgCardOne});\n  }\n\n  &:nth-child(2) > * {\n    background: url(${bgCardTwo});\n  }\n\n  &:nth-child(3) > * {\n    background: url(${bgCardThree});\n  }\n\n  &:nth-child(4) > * {\n    background: url(${bgCardFour});\n  }\n\n  &:nth-child(5) > * {\n    background: url(${bgCardFive});\n  }\n\n  &:nth-child(6) > * {\n    background: url(${bgCardSix});\n  }\n\n  &:nth-child(7) > * {\n    background: url(${bgCardSeven});\n  }\n`;\n\nconst MovieContent = styled.div`\n  display: block;\n  background-color: ${COLOR_BACKGROUND};\n  padding: 2rem;\n  color: ${COLOR_WHITE};\n  transform: perspective(1px) translateZ(0);\n  box-shadow: ${BOX_SHADOW_PRIMARY};\n  transition: all 0.3s;\n  overflow: hidden;\n  border-radius: 0.5rem;\n\n  &:hover {\n    box-shadow: ${BOX_SHADOW_PRIMARY_HOVER};\n  }\n`;\n\nexport default function MovieItem({ id, title, description, releaseDate }) {\n  return (\n    <ColumnWithBackground>\n      <MovieContent>\n        <MovieHeader id={id} title={title} releaseDate={releaseDate} />\n        <MovieDescription description={description} />\n        <MovieLink id={id} />\n      </MovieContent>\n    </ColumnWithBackground>\n  );\n}\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n};\n","// Import all Dependencies\nimport React from 'react';\n\n// Import all Component\nimport MovieItem from './MovieItem';\n\n// Imprort all Styles\nimport { Container, Row } from '../../shared/styles/base/grid';\nimport Loader from '../../shared/components/Loader/Loader';\n\n// Import all hooks\nimport useMovieList from '../../shared/hooks/useMovieList';\n\nexport default function MovieList(props) {\n  const { loading, movieList } = useMovieList();\n\n  return (\n    <Container>\n      <Row>\n        {loading ? (\n          <Loader />\n        ) : (\n          movieList.map(movie => (\n            <MovieItem\n              key={movie.id}\n              id={movie.id}\n              description={movie.description}\n              releaseDate={movie.releaseDate}\n              title={movie.title}\n            />\n          ))\n        )}\n      </Row>\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// Import all Helpers\nimport { getAllMovie } from '../helpers/api';\n\nexport default function useMovieList() {\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchData = async () => {\n      const movieData = await getAllMovie();\n      if (mounted) {\n        setMovieList(movieData);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return {\n    loading,\n    movieList,\n  };\n}\n"],"sourceRoot":""}